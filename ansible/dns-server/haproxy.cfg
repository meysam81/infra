global
  maxconn 1000
  log /dev/log    local0
  log /dev/log    local1 notice
  chroot /var/lib/haproxy
  stats socket /run/haproxy/admin.sock mode 660 level admin
  stats timeout 30s
  user haproxy
  group haproxy
  daemon

  # Default SSL material locations
  ca-base /etc/ssl/certs
  crt-base /etc/ssl/private

  # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
  ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
  ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
  ssl-default-bind-options ssl-min-ver TLSv1.3 no-tls-tickets

defaults
  backlog 1000
  log     global
  mode    http
  option  httplog
  option  dontlognull
  timeout connect 5000
  timeout client  50000
  timeout server  50000
  errorfile 400 /etc/haproxy/errors/400.http
  errorfile 403 /etc/haproxy/errors/403.http
  errorfile 404 /etc/haproxy/errors/404.http
  errorfile 408 /etc/haproxy/errors/408.http
  errorfile 429 /etc/haproxy/errors/429.http
  errorfile 500 /etc/haproxy/errors/500.http
  errorfile 502 /etc/haproxy/errors/502.http
  errorfile 503 /etc/haproxy/errors/503.http
  errorfile 504 /etc/haproxy/errors/504.http

cache hacache
  total-max-size 10
  max-object-size 10000
  max-age 60

frontend stats
  bind *:8404
  http-request use-service prometheus-exporter if { path /metrics }
  stats enable
  stats uri /stats
  stats refresh 10s

frontend http
  bind :::80

  http-request set-var(txn.req_hdrs) req.hdrs
  log-format "${HAPROXY_HTTP_LOG_FMT} hdrs:%{+Q}[var(txn.req_hdrs)]"

  redirect scheme https code 301 if !{ ssl_fc }

  default_backend not_found

frontend https
  bind :::443 ssl crt /etc/haproxy/certs/ alpn h2,http/1.1

  option forwardfor

  http-request set-var(txn.req_hdrs) req.hdrs
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  log-format "${HAPROXY_HTTP_LOG_FMT} hdrs:%{+Q}[var(txn.req_hdrs)]"

  filter cache hacache
  http-request cache-use hacache
  http-response cache-store hacache

  stick-table type ip size 1m expire 24d store http_req_rate(60s)
  http-request track-sc0 src
  http-request deny deny_status 429 if { sc_http_req_rate(0) gt 500 }

  acl dns_host hdr(host) -i dns.meysam.io
  acl doh path /dns-query
  use_backend doh_server if dns_host doh

  acl admin_host hdr(host) -i dns.meysam.io
  acl admin_path path_beg /admin || path_beg /api
  use_backend pihole_ftl if admin_host admin_path

  http-response set-header X-Frame-Options DENY
  http-response set-header X-Content-Type-Options nosniff
  http-response set-header X-XSS-Protection "1; mode=block"
  http-response set-header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload;"

  default_backend not_found

backend doh_server
  server s0 127.0.0.1:8053 check inter 2000 rise 1 fall 3

backend pihole_ftl
  server s0 127.0.0.1:8080 check inter 2000 rise 1 fall 3

backend not_found
  http-request deny deny_status 404
