name: sync

on:
  workflow_call:
    inputs:
      command:
        description: "Command to run"
        required: false
        default: "plan"
        type: string
      comment:
        description: "Whether to comment the PR"
        required: false
        default: "0"
        type: string
      aws-region:
        description: "AWS Region"
        required: true
        type: string
      working-dir:
        description: "Working directory"
        required: false
        type: string
        default: live
      tf-version:
        description: "Terraform version"
        required: false
        type: string
        default: 1.5.7
      tg-version:
        description: "Terragrunt version"
        required: false
        type: string
        default: 0.53.0

jobs:
  terragrunt:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: Configure AWS credentials
        run: |
          aws configure set --profile source aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set --profile source aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set --profile source region ${{ inputs.aws-region }}
          aws configure set --profile personal source_profile source
          aws configure set --profile personal region ${{ inputs.aws-region }}
          aws configure set --profile personal role_arn ${{ secrets.AWS_ROLE_ARN }}
      - name: Check credentials
        run: |
          aws sts get-caller-identity --profile source
          aws sts get-caller-identity --profile personal
      - name: Terragrunt ${{ inputs.command }}
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ inputs.tf-version }}
          tg_version: ${{ inputs.tg-version }}
          tg_dir: ${{ inputs.working-dir }}
          tg_command: ${{ inputs.command }}
          tg_comment: ${{ inputs.comment }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          TF_TOKEN_app_terraform_io: ${{ secrets.TERRAFORM_CLOUD_TOKEN }}
