name: ci
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  schedule:
    - cron: "0 */12 * * *"
    - cron: "30 13 * * *" # 8:30 eastern time
  workflow_dispatch:
    inputs:
      title:
        description: The title of the link to submit.
        required: true
      url:
        description: The URL of the link to submit.
        required: true
      verbose:
        type: boolean
        description: Verbose?
        default: true

env:
  tf_version: "1.5.7"
  tg_version: "0.53.0"
  working_dir: "live"
  PYTHON_VERSION: 3.12

permissions:
  id-token: write
  contents: write
  pull-requests: write

jobs:
  lint:
    if: contains(fromJson('["push","pull_request","schedule"]'), github.event_name)
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
      - name: Check terragrunt HCL
        uses: gruntwork-io/terragrunt-action@v2
        with:
          tf_version: ${{ env.tf_version }}
          tg_version: ${{ env.tg_version }}
          tg_dir: ${{ env.working_dir }}
          tg_command: "hclfmt --terragrunt-check --terragrunt-diff"

  plan:
    needs: lint
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        directory:
          - live/cloudflare
    uses: ./.github/workflows/sync.yml
    with:
      aws-region: ap-southeast-1
      command: "plan"
      comment: "1"
      working-dir: ${{ matrix.directory }}
    secrets: inherit

  deploy:
    needs: plan
    permissions: write-all
    strategy:
      fail-fast: false
      matrix:
        directory:
          - live/cloudflare
    if: github.ref == 'refs/heads/main'
    uses: ./.github/workflows/sync.yml
    with:
      aws-region: ap-southeast-1
      command: apply -auto-approve
      working-dir: ${{ matrix.directory }}
    secrets: inherit

  trivy:
    if: contains(fromJson('["push","pull_request","schedule"]'), github.event_name)
    runs-on: ubuntu-latest
    permissions:
      contents: read # for actions/checkout to fetch code
      security-events: write # for github/codeql-action/upload-sarif to upload SARIF results
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run Trivy vulnerability scanner in fs mode
        uses: aquasecurity/trivy-action@master
        with:
          exit-code: "1"
          format: template
          output: trivy-results.sarif
          scan-ref: .
          scan-type: fs
          template: "@/contrib/sarif.tpl"
          trivy-config: trivy.yaml
      - if: failure()
        name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif
      - if: always()
        name: Upload Trivy results to Github Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: trivy-results
          path: trivy-results.sarif

  kubescape:
    if: contains(fromJson('["push","pull_request","schedule"]'), github.event_name)
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: kubescape/github-action@main
        continue-on-error: true
        with:
          format: sarif
          outputFile: results
      - name: Upload Kubescape scan results to Github Code Scanning
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: results.sarif

  fetch-hn-submissions:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    # if: github.event_name == 'schedule' && github.event.schedule == '30 13 * * *'
    runs-on: ubuntu-latest
    permissions:
      contents: read
    env:
      HACKERNEWS_DSN: ${{ secrets.HACKERNEWS_DSN }}
    defaults:
      run:
        working-directory: ./applications/hn-submission
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
      length: ${{ steps.matrix.outputs.length }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install poetry
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          pip install 'poetry<2'
          poetry install
      - id: matrix
        name: Fetch Hacker News submissions
        run: poetry run ./main.py

  submit-hackernews:
    if: ${{ needs.fetch-hn-submissions.outputs.length > 0 }}
    needs: fetch-hn-submissions
    runs-on: ubuntu-latest
    permissions:
      contents: read
    strategy:
      matrix: ${{ fromJson(needs.fetch-hn-submissions.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Show submission information
        run: |
          echo "${{ matrix.id }}: ${{ matrix.title }} ${{ matrix.url }}"
      # - name: Submit link to Hacker News
      #   uses: meysam81/submit-hackernews@main
      #   with:
      #     username: ${{ secrets.HACKERNEWS_USERNAME }}
      #     password: ${{ secrets.HACKERNEWS_PASSWORD }}
      #     title: ${{ matrix.title }}
      #     url: ${{ matrix.url }}
      #     verbose: true
      - name: Install poetry
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Install dependencies
        run: |
          pip install 'poetry<2'
          poetry install
      - name: Mark story as submitted
        run: poetry run ./main.py --submit --id "${{ matrix.id }}"
