apiVersion: apps/v1
kind: Deployment
metadata:
  name: atuin
spec:
  replicas: 1
  template:
    spec:
      containers:
        - args:
            - server
            - start
          envFrom:
            - secretRef:
                name: atuin
            - configMapRef:
                name: atuin
          image: ghcr.io/atuinsh/atuin
          name: atuin
          ports:
            - containerPort: 8888
              name: http
          volumeMounts:
            - mountPath: /config
              name: atuin-claim
        - command:
            - sh
            - -c
            - |
              set -eu

              ATUIN_DB_URI="postgresql://atuin_owner:spHYJQ40LItB@ep-misty-leaf-a168l8rz-pooler.ap-southeast-1.aws.neon.tech/atuin?sslmode=require"

              export POSTGRES_HOST=$(echo $ATUIN_DB_URI | awk -F/ '{print $3}' | awk -F@ '{print $2}')
              export POSTGRES_USER=$(echo $ATUIN_DB_URI | awk -F/ '{print $3}' | awk -F: '{print $1}')
              export POSTGRES_PASSWORD=$(echo $ATUIN_DB_URI | awk -F: '{print $3}' | awk -F@ '{print $1}')
              export POSTGRES_DB=$(echo $ATUIN_DB_URI | awk -F/ '{print $4}' | awk -F? '{print $1}')

              while true; do
                if pg_isready -h $POSTGRES_HOST -U $POSTGRES_USER -d $POSTGRES_DB -p 5432; then
                  sleep 30
                else
                  exit 1
                fi
              done
          envFrom:
            - secretRef:
                name: atuin
          image: postgres:16-alpine
          imagePullPolicy: IfNotPresent
          name: postgres-healthcheck
          securityContext:
            readOnlyRootFilesystem: true
            runAsNonRoot: true
      volumes:
        - name: atuin-claim
          emptyDir: {}
