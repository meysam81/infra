apiVersion: v1
items:
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRole
    metadata:
      name: sidecar-role
    rules:
      - apiGroups:
          - ""
        resources:
          - configmaps
        verbs:
          - get
          - watch
          - list
  - apiVersion: rbac.authorization.k8s.io/v1
    kind: ClusterRoleBinding
    metadata:
      name: sidecar-rolebinding
    roleRef:
      apiGroup: rbac.authorization.k8s.io
      kind: ClusterRole
      name: sidecar-role
    subjects:
      - kind: ServiceAccount
        name: grafana-sa
        namespace: monitoring
  - apiVersion: external-secrets.io/v1beta1
    kind: ExternalSecret
    metadata:
      name: grafana
      namespace: monitoring
    spec:
      data:
        - remoteRef:
            key: /grafana/oidc/google/client-id
          secretKey: client-id
        - remoteRef:
            key: /grafana/oidc/google/client-secret
          secretKey: client-secret
        - remoteRef:
            key: /grafana/admin/user
          secretKey: admin-user
        - remoteRef:
            key: /grafana/admin/password
          secretKey: admin-password
        # - remoteRef:
        #     key: /grafana/smtp/username
        #   secretKey: smtp-username
        # - remoteRef:
        #     key: /grafana/smtp/password
        #   secretKey: smtp-password
      refreshInterval: 24h
      secretStoreRef:
        kind: ClusterSecretStore
        name: aws-parameter-store
  - apiVersion: v1
    data:
      provisioning.yaml: |-
        apiVersion: 1
        providers:
          - name: 'configmap-dashboard-provider'
            orgId: 1
            folder: ''
            folderUid: ''
            type: file
            disableDeletion: false
            updateIntervalSeconds: 10
            allowUiUpdates: false
            options:
              path: /var/lib/grafana/dashboards
              foldersFromFilesStructure: true
    kind: ConfigMap
    metadata:
      name: provisioning-config
      namespace: monitoring
  - apiVersion: grafana.integreatly.org/v1beta1
    kind: Grafana
    metadata:
      labels:
        dashboards: grafana
      name: grafana
      namespace: monitoring
    spec:
      config:
        auth:
          disable_login_form: "false"
        auth.google:
          allow_sign_up: "true"
          allowed_domains: developer-friendly.blog
          auth_url: https://accounts.google.com/o/oauth2/auth
          enabled: "true"
          scopes: https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email
          token_url: https://accounts.google.com/o/oauth2/token
        log:
          mode: console
        security:
          admin_user: admin
        server:
          root_url: https://grafana.developer-friendly.blog
        smtp:
          enable_tracing: "true"
          enabled: "true"
          from_address: info@codeagency.cloud
          from_name: Grafana
          host: smtp.postmarkapp.com:587
      deployment:
        spec:
          template:
            spec:
              containers:
                - env:
                    # - name: GF_SMTP_USER
                    #   valueFrom:
                    #     secretKeyRef:
                    #       key: smtp-username
                    #       name: grafana
                    #       optional: false
                    # - name: GF_SMTP_PASSWORD
                    #   valueFrom:
                    #     secretKeyRef:
                    #       key: smtp-password
                    #       name: grafana
                    #       optional: false
                    - name: GF_AUTH_GOOGLE_CLIENT_ID
                      valueFrom:
                        secretKeyRef:
                          key: client-secret
                          name: grafana
                          optional: false
                    - name: GF_AUTH_GOOGLE_CLIENT_SECRET
                      valueFrom:
                        secretKeyRef:
                          key: client-secret
                          name: grafana
                          optional: false
                    - name: GF_SECURITY_ADMIN_USER
                      valueFrom:
                        secretKeyRef:
                          key: admin-user
                          name: grafana
                          optional: false
                    - name: GF_SECURITY_ADMIN_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: admin-password
                          name: grafana
                          optional: false
                  livenessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /api/health
                      port: grafana-http
                    initialDelaySeconds: 1
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 5
                  name: grafana
                  readinessProbe:
                    failureThreshold: 3
                    httpGet:
                      path: /api/health
                      port: grafana-http
                    initialDelaySeconds: 1
                    periodSeconds: 10
                    successThreshold: 1
                    timeoutSeconds: 5
                  securityContext:
                    allowPrivilegeEscalation: false
                    runAsGroup: 472
                    runAsNonRoot: true
                    runAsUser: 472
                  volumeMounts:
                    - mountPath: /etc/grafana/provisioning/dashboards
                      name: provisioning-config
                    - mountPath: /var/lib/grafana/dashboards
                      name: dashboards
                - env:
                    - name: LABEL
                      value: grafana_dashboard
                    - name: LABEL_VALUE
                      value: "1"
                    - name: FOLDER
                      value: /var/lib/grafana/dashboards
                    - name: NAMESPACE
                      value: ALL
                    - name: RESOURCE
                      value: configmap
                    - name: SKIP_TLS_VERIFY
                      value: "true"
                  image: ghcr.io/kiwigrid/k8s-sidecar:1.28.4
                  name: k8s-sidecar
                  volumeMounts:
                    - mountPath: /var/lib/grafana/dashboards
                      name: dashboards
              securityContext:
                fsGroup: 472
                fsGroupChangePolicy: OnRootMismatch
              volumes:
                - name: grafana-data
                  persistentVolumeClaim:
                    claimName: grafana-pvc
                - emptyDir: {}
                  name: dashboards
                - configMap:
                    name: provisioning-config
                  name: provisioning-config
      persistentVolumeClaim:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
          storageClassName: local-path
      version: 11.4.0
  - apiVersion: gateway.networking.k8s.io/v1
    kind: HTTPRoute
    metadata:
      name: grafana
      namespace: monitoring
    spec:
      hostnames:
        - grafana.developer-friendly.blog
      parentRefs:
        - group: gateway.networking.k8s.io
          kind: Gateway
          name: global
          namespace: cert-manager
          sectionName: http
      rules:
        - backendRefs:
            - group: ""
              kind: Service
              name: grafana-service
              port: 3000
              weight: 1
          filters:
            - responseHeaderModifier:
                set:
                  - name: Access-Control-Allow-Credentials
                    value: "true"
                  - name: Access-Control-Allow-Headers
                    value: "*"
                  - name: Access-Control-Allow-Methods
                    value: GET, PUT, POST, DELETE, OPTIONS
                  - name: Access-Control-Allow-Origin
                    value: "*"
                  - name: Cache-Control
                    value: no-cache, no-store
                  - name: Cross-Origin-Embedder-Policy
                    value: unsafe-none
                  - name: Cross-Origin-Opener-Policy
                    value: unsafe-none
                  - name: Cross-Origin-Resource-Policy
                    value: cross-origin
                  - name: Referrer-Policy
                    value: unsafe-url
                  - name: Strict-Transport-Security
                    value: max-age=31536000; includeSubDomains; preload
                  - name: X-Content-Type-Options
                    value: nosniff
                  - name: X-Permitted-Cross-Domain-Policies
                    value: none
                  - name: X-XSS-Protection
                    value: "0"
              type: ResponseHeaderModifier
          matches:
            - path:
                type: PathPrefix
                value: /
  - apiVersion: cilium.io/v2
    kind: CiliumNetworkPolicy
    metadata:
      name: capacitor
    spec:
      description: Allow all internet traffic
      endpointSelector:
        matchLabels:
            k8s:app: grafana
            k8s:io.cilium.k8s.namespace.labels.kubernetes.io/metadata.name: monitoring
            k8s:io.cilium.k8s.policy.serviceaccount: grafana-sa
            k8s:io.kubernetes.pod.namespace: monitoring
      ingress:
        - fromEntities:
            - ingress
          toPorts:
            - ports:
                - port: "9000"
                  protocol: TCP
              rules:
                http: [{}]
kind: List
metadata: {}
