- name: Newsletter Server
  hosts: newsletter_server
  gather_facts: true
  become: true
  vars_files:
    - vars.yml
  tasks:
    - name: Copy HAProxy suspicious bot lists
      ansible.builtin.copy:
        src: "{{ item }}"
        dest: /etc/haproxy/{{ item }}
        owner: haproxy
        group: haproxy
        mode: "0644"
      with_items:
        - blocklist_hosts.lst
        - blocklist_ips.lst
        - shady_user_agents.lst
      tags:
        - haproxy
      notify: Reload haproxy
    - name: Create bad IP service
      tags:
        - bad-ip
      block:
        - name: Create the systemd files
          ansible.builtin.copy:
            src: "{{ item }}"
            dest: /etc/systemd/system/{{ item }}
            owner: root
            group: root
            mode: "0644"
          with_items:
            - update-bad-ips.service
            - update-bad-ips.timer
          notify: Restart bad IP service
        - name: Ensure /etc/haproxy/bad_reputation_ips.lst exists
          ansible.builtin.file:
            path: /etc/haproxy/bad_reputation_ips.lst
            state: touch
            owner: haproxy
            group: haproxy
            mode: "0644"
        - name: Create the bad-ip shell script
          ansible.builtin.copy:
            src: update-bad-ips.sh
            dest: /usr/local/bin/update-bad-ips
            owner: root
            group: root
            mode: "0755"
        - name: Start the bad IP service
          ansible.builtin.systemd:
            name: update-bad-ips.service
            state: started
            daemon_reload: true
          changed_when: false
        - name: Enable the bad IP timer
          ansible.builtin.systemd:
            name: update-bad-ips.timer
            enabled: true
            daemon_reload: true
    - name: Create TLS certificate
      tags: tls
      block:
        - name: Create the tls issuance script
          ansible.builtin.copy:
            content: |
              #!/usr/bin/env sh
              set -eux

              certbot certonly \
                --dns-cloudflare \
                --dns-cloudflare-credentials /root/.cloudflare-secrets.ini \
                --dns-cloudflare-propagation-seconds 120 \
                --agree-tos \
                --non-interactive \
                --email meysam@developer-friendly.blog \
                -d 'developer-friendly.blog' \
                -d '*.developer-friendly.blog'

              mkdir -p /etc/haproxy/certs
              cat /etc/letsencrypt/live/developer-friendly.blog/fullchain.pem \
                  /etc/letsencrypt/live/developer-friendly.blog/privkey.pem > \
                  /etc/haproxy/certs/developer-friendly.blog.pem
            dest: /usr/local/bin/issue-tls-certificate.sh
            owner: root
            group: root
            mode: "0755"
        - name: Place the cloudflare api token
          ansible.builtin.copy:
            content: |
              dns_cloudflare_api_token = {{ lookup('amazon.aws.ssm_parameter', '/cloudflare/api-token', region='ap-southeast-1') }}
            dest: /root/.cloudflare-secrets.ini
            owner: root
            group: root
            mode: "0600"
        - name: Issue the TLS certificate
          ansible.builtin.shell:
            cmd: /usr/local/bin/issue-tls-certificate.sh
          tags:
            - issue-tls
          changed_when: false
          failed_when: false
        - name: Frequently update the TLS certificate
          ansible.builtin.copy:
            src: files/prepare-haproxy-certs.sh
            dest: /etc/cron.weekly/prepare-haproxy-certs
            owner: root
            group: root
            mode: "0755"
    - name: Update HAProxy config
      ansible.builtin.copy:
        src: haproxy.cfg
        dest: /etc/haproxy/haproxy.cfg
        owner: haproxy
        group: haproxy
        mode: "0644"
      notify: Reload haproxy
      tags:
        - haproxy
    - name: Copy the static HTTP response files
      ansible.builtin.uri:
        url: "{{ item }}"
        dest: /etc/haproxy/errors/{{ item | basename }}
        owner: haproxy
        group: haproxy
        mode: "0644"
      with_items:
        - https://gist.githubusercontent.com/meysam81/85af1ff71d28d0c3350beb7910bcf288/raw/9a05d89ec7d80d09c78e6a0a4484ff1ad300f517/404.http
        - https://gist.githubusercontent.com/meysam81/85af1ff71d28d0c3350beb7910bcf288/raw/9a05d89ec7d80d09c78e6a0a4484ff1ad300f517/429.http
        - https://gist.githubusercontent.com/meysam81/85af1ff71d28d0c3350beb7910bcf288/raw/9a05d89ec7d80d09c78e6a0a4484ff1ad300f517/503.http
      tags: haproxy
    - name: Verify HAProxy config
      ansible.builtin.command:
        cmd: haproxy -c -f /etc/haproxy/haproxy.cfg
      changed_when: false
      tags:
        - haproxy
    - name: Update HAProxy systemd service file
      ansible.builtin.copy:
        src: haproxy.service
        dest: /etc/systemd/system/haproxy.service
        owner: root
        group: root
        mode: "0644"
      notify: Reload haproxy
      tags:
        - haproxy
    - name: Grant /etc/haproxy/ to the haproxy user
      ansible.builtin.file:
        path: /etc/haproxy/
        owner: haproxy
        group: haproxy
        recurse: true
      tags:
        - haproxy
    - name: Increase ulimit for files on haproxy user
      ansible.builtin.copy:
        content: |
          haproxy soft nofile 65536
          haproxy hard nofile 65536
        dest: /etc/security/limits.d/haproxy.conf
        owner: root
        group: root
        mode: "0644"
      tags: haproxy
  roles:
    - name: meysam81.general.haproxy
      tags: haproxy
      vars:
        haproxy_version: 3.1
    - name: meysam81.general.k8s_oidc_github_pages
      vars:
        k8s_oidc_github_pages_commit_email: meysam@developer-friendly.blog
        k8s_oidc_github_pages_github_deploy_key: "{{ lookup('amazon.aws.ssm_parameter', '/github/k8s-oidc-provider/deploy-key', region='ap-southeast-1') }}"
        k8s_oidc_github_pages_repository_name: secondly-brightly-certain-halibut
        k8s_oidc_github_pages_repository_owner: meysam81
      tags: k8s-oidc
  handlers:
    - name: Reload haproxy
      ansible.builtin.systemd:
        name: haproxy
        state: reloaded
        daemon_reload: true
    - name: Restart bad IP service
      ansible.builtin.systemd:
        name: update-bad-ips.service
        state: restarted
        daemon_reload: true
