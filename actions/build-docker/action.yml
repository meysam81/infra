name: "Build Docker Image"
description: "Builds and optionally pushes a Docker image"

inputs:
  build-args:
    default: ""
    description: Build arguments
    required: false
  context:
    default: .
    description: Context of the Dockerfile
    required: false
  dockerhub-username:
    description: Docker Hub username
    required: false
  dockerhub-password:
    description: Docker Hub password
    required: false
  github-token:
    description: GitHub token
    required: true
    default: ${{ github.token }}
  image-extra-tags:
    default: ""
    description: Image tags
    required: false
  image-name:
    description: Image name
    required: true
  image-target:
    default: ""
    description: Target stage of the Dockerfile
    required: false
  platforms:
    default: linux/amd64,linux/arm64
    description: Platforms to build for
    required: false
  push:
    default: "true"
    description: Whether or not to push image to registry
    required: false
  ref:
    default: ${{ github.ref }}
    description: Ref to checkout
    required: false
  runner:
    default: ubuntu-latest
    description: Runner to use
    required: false
  scout-comment-pr:
    default: "false"
    description: Whether or not to comment on PR
    required: false
  scout-compare:
    default: "false"
    description: Whether or not to run scout compare
    required: false
  scout-cves:
    default: "true"
    description: Whether or not to run scout CVEs
    required: false

outputs:
  digest:
    description: Image digest
    value: ${{ steps.build-push.outputs.digest }}
  imageid:
    description: Image ID
    value: ${{ steps.build-push.outputs.image-id }}
  metadata:
    description: Build result metadata
    value: ${{ steps.build-push.outputs.metadata }}

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        ref: ${{ inputs.ref }}

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        password: ${{ inputs.github-token }}
        registry: ghcr.io
        username: ${{ github.actor }}

    - if: ${{ inputs.dockerhub-username && inputs.dockerhub-password }}
      name: Login to Docker hub
      uses: docker/login-action@v3
      with:
        password: ${{ inputs.dockerhub-password }}
        username: ${{ inputs.dockerhub-username }}

    - name: Docker metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.image-name }}
        tags: |
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/master' }}

    - name: Build and push
      id: build-push
      uses: docker/build-push-action@v6
      with:
        build-args: ${{ inputs.build-args }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: ${{ inputs.context }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: ${{ inputs.platforms }}
        push: ${{ inputs.push }}
        tags: |
          ${{ steps.meta.outputs.tags }}
          ${{ inputs.image-extra-tags }}
        target: ${{ inputs.image-target }}

    - name: Docker Scout - compare
      if: inputs.scout-compare == 'true'
      uses: docker/scout-action@v1
      with:
        command: compare
        github-token: ${{ github.token }}
        ignore-unchanged: true
        image: ${{ steps.meta.outputs.tags }}
        only-severities: critical,high,medium
        to: ${{ inputs.image-name }}:latest
        write-comment: ${{ inputs.scout-comment-pr }}

    - name: Docker Scout - cves
      if: inputs.scout-cves == 'true'
      uses: docker/scout-action@v1
      with:
        command: cves
        ignore-unchanged: true
        image: ${{ steps.meta.outputs.tags }}
        only-fixed: true
        only-severities: medium,high,critical
        sarif-file: sarif.output.json
        summary: true

    - name: Create unique job identifier
      id: job-id
      shell: bash
      run: |
        four_character_timestamp=$(date +%s | sha256sum | base64 | head -c 4)
        run_id=$(echo ${{ github.run_id }} | sha256sum | base64 | head -c 4)
        job_id="${four_character_timestamp}${run_id}"
        echo "job-id=$job_id" >> $GITHUB_OUTPUT

    - name: Upload artifact
      if: inputs.scout-cves == 'true'
      uses: actions/upload-artifact@v4
      with:
        if-no-files-found: warn
        name: scout-results-${{ steps.job-id.outputs.job-id }}
        path: sarif.output.json
