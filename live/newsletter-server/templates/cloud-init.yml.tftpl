#cloud-config
write_files:
  - path: /etc/k3s/token
    content: ${k3s_token}
    owner: root:root
    permissions: "0600"
    encoding: base64
apt:
  sources:
    haproxy.list:
      source: "ppa:vbernat/haproxy-3.1"
packages:
  - python3
  - python3-pip
  - python3-certbot-dns-cloudflare
  - file
  - haproxy
  - snap:
      - certbot
users:
  - name: meysam
    groups: users, admin, adm
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    ssh_authorized_keys:
      - ${ssh_public_key}
package_update: true
package_upgrade: true
power_state:
  delay: 1
  mode: reboot
  message: Rebooting machine
runcmd:
  - printf "[sshd]\nenabled = true\nbanaction = iptables-multiport" > /etc/fail2ban/jail.local
  - systemctl enable fail2ban
  - sed -i -e '/^\(#\|\)PermitRootLogin/s/^.*$/PermitRootLogin no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)PasswordAuthentication/s/^.*$/PasswordAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)KbdInteractiveAuthentication/s/^.*$/KbdInteractiveAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)ChallengeResponseAuthentication/s/^.*$/ChallengeResponseAuthentication no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)MaxAuthTries/s/^.*$/MaxAuthTries 2/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)X11Forwarding/s/^.*$/X11Forwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AllowAgentForwarding/s/^.*$/AllowAgentForwarding no/' /etc/ssh/sshd_config
  - sed -i -e '/^\(#\|\)AuthorizedKeysFile/s/^.*$/AuthorizedKeysFile .ssh\/authorized_keys/' /etc/ssh/sshd_config
  - |
    curl -s https://get.k3s.io | \
      INSTALL_K3S_CHANNEL=latest \
      INSTALL_K3S_EXEC="
        --kube-apiserver-arg=service-account-issuer=${k3s_service_account_issuer}
        --kube-apiserver-arg=service-account-jwks-uri=${k3s_service_account_jwks_uri}
        --kube-apiserver-arg=anonymous-auth=true
        --disable=traefik
        --token-file=/etc/k3s/token
        --tls-san=${server_public_ipv4}
        --tls-san=${server_public_ipv6}
        --disable-network-policy
        --flannel-backend=none
        --secrets-encryption" \
      sh -
  - |
    mkdir -p /home/meysam/.kube
    cp /etc/rancher/k3s/k3s.yaml /home/meysam/.kube/config
    echo 'export KUBECONFIG=~/.kube/config' | tee -a /home/meysam/.bashrc
    chown -R meysam:meysam /home/meysam/
  - kubectl completion bash | tee /etc/bash_completion.d/kubectl
  - k3s completion bash | tee /etc/bash_completion.d/k3s
  - |
    cat << 'EOF2' | tee -a /home/meysam/.bashrc
    alias k=kubectl
    complete -F __start_kubectl k
    EOF2
  - |
    systemctl is-active k3s
    export KUBECONFIG=/etc/rancher/k3s/k3s.yaml
    kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.1.0/standard-install.yaml --server-side
    kubectl apply -f https://github.com/kubernetes-sigs/gateway-api/releases/download/v1.1.0/experimental-install.yaml --server-side
  - |
    cd $(mktemp -d)

    CILIUM_VERSION=1.16.5
    CLI_ARCH=arm64
    curl -L --fail --remote-name-all https://github.com/cilium/cilium-cli/releases/latest/download/cilium-linux-$CLI_ARCH.tar.gz{,.sha256sum}
    sha256sum --check cilium-linux-$CLI_ARCH.tar.gz.sha256sum
    tar xzvf cilium-linux-$CLI_ARCH.tar.gz -C /usr/local/bin/

    export HOME=/root
    cilium install \
      --set kubeProxyReplacement=true \
      --set gatewayAPI.enabled=true \
      --set encryption.enabled=true \
      --set encryption.type=wireguard \
      --set hubble.enabled=true \
      --set hubble.ui.enabled=true \
      --set hubble.relay.enabled=true \
      --version=$CILIUM_VERSION \
      --wait || echo "Cilium already installed"
